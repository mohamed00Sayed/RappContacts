{"version":3,"sources":["ListContacts.js","utils/ContactsAPI.js","ImageInput.js","CreateContact.js","App.js","registerServiceWorker.js","index.js"],"names":["ListContacts","state","query","updateQuery","_this","setState","trim","clearQuery","_this2","this","_this$props","props","contacts","onDeleteContact","showingContacts","filter","c","name","toLowerCase","includes","react_default","a","createElement","className","type","placeholder","value","onChange","evt","target","react_router_dom","to","length","onClick","map","contact","key","id","style","backgroundImage","concat","avatarURL","handle","Component","api","process","REACT_APP_CONTACTS_API_URL","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","remove","fetch","method","then","res","json","data","create","body","Object","objectSpread","Content-Type","JSON","stringify","readFileAsDataURL","file","Promise","resolve","reader","FileReader","onload","event","result","readAsDataURL","resizeImage","imageURL","canvas","maxHeight","image","Image","context","getContext","height","width","clearRect","drawImage","toDataURL","src","ImageInput","handleFileChange","files","match","originalURL","url","handleFormReset","document","fileInput","form","addEventListener","removeEventListener","position","backgroundRepeat","backgroundPosition","backgroundSize","ref","node","top","left","opacity","React","CreateContact","handleSubmit","e","preventDefault","values","serializeForm","hash","onCreateContact","onSubmit","src_ImageInput","App","createContact","ContactsAPI","currentState","removeContact","_this3","react_router","exact","path","render","src_ListContacts","_ref","history","src_CreateContact","push","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","src_App","getElementById","URL","origin","response","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.b2300ef1.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes  from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n\nclass ListContacts extends Component{\n\tstatic propTypes = {\n\t\tcontacts: PropTypes.array.isRequired,\n\t\tonDeleteContact: PropTypes.func.isRequired\n\t}\n\t\n\tstate = {\n\t\tquery: ''\n\t}\n\t\n\tupdateQuery = (query) => {\n\t\tthis.setState(() => ({\n\t\t\tquery: query.trim()\n\t\t}))\n\t}\n\t\n\tclearQuery = () => {\n\t\tthis.updateQuery('')\n\t}\n\t\n\trender(){\n\t\t\n\t\tconst { query } = this.state\n\t\tconst { contacts, onDeleteContact } = this.props\n\n\t\tconst showingContacts = query === ''\n\t\t  ? contacts\n\t\t  : contacts.filter((c) => (\n\t\t\t  c.name.toLowerCase().includes(query.toLowerCase())\n\t\t\t))\n\t\treturn(\n\t\t\t<div className='list-contacts'>\n\t\t\t\t<div className='list-contacts-top'>\n\t\t\t\t\t<input \n\t\t\t\t\t\tclassName='search-contacts'\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tplaceholder='Search Contacts'\n\t\t\t\t\t\tvalue={query}\n\t\t\t\t\t\tonChange={(evt) => {this.updateQuery(evt.target.value)}}\n\t\t\t\t\t/>\n\t\t\t\t\t\n\t\t\t\t\t<Link \n\t\t\t\t\t\tto='/create'\n\t\t\t\t\t\tclassName='add-contact'\n\t\t\t\t\t>Add Contact</Link>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t{showingContacts.length !== contacts.length && (\n\t\t\t\t\t<div className='showing-contacts'>\n\t\t\t\t\t\t<span>Now showing {showingContacts.length} of {contacts.length}</span>\n\t\t\t\t\t\t<button onClick={this.clearQuery}>Show all</button>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t\n\t\t\t\t<ol className='contact-list'>\n\t\t\t\t\t{showingContacts.map((contact) => (\n\t\t\t\t\t\t<li key={contact.id} className='contact-list-item'>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName='contact-avatar'\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tbackgroundImage: `url(${contact.avatarURL})`\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t></div>\n\t\t\t\t\t\t\t<div className='contact-details'>\n\t\t\t\t\t\t\t\t<p>{contact.name}</p>\n\t\t\t\t\t\t\t\t<p>{contact.handle}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<button className='contact-remove' onClick={()=> {onDeleteContact(contact)}}>\n\t\t\t\t\t\t\t\tRemove\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ol>\n\t\t\t</div>\n\t\t\t\n\t\t)\n\t}\n}\n\nexport default ListContacts;","const api = process.env.REACT_APP_CONTACTS_API_URL || 'http://localhost:5001'\n\nlet token = localStorage.token\n\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const getAll = () =>\n  fetch(`${api}/contacts`, { headers })\n    .then(res => res.json())\n    .then(data => data.contacts)\n\nexport const remove = (contact) =>\n  fetch(`${api}/contacts/${contact.id}`, { method: 'DELETE', headers })\n    .then(res => res.json())\n    .then(data => data.contact)\n\nexport const create = (body) =>\n  fetch(`${api}/contacts`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  }).then(res => res.json())","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst readFileAsDataURL = (file) =>\n  new Promise(resolve => {\n    const reader = new FileReader()\n\n    reader.onload = (event) => {\n      resolve(event.target.result)\n    }\n\n    reader.readAsDataURL(file)\n  })\n\nconst resizeImage = (imageURL, canvas, maxHeight) =>\n  new Promise(resolve => {\n    const image = new Image()\n\n    image.onload = () => {\n      const context = canvas.getContext('2d')\n\n      if (image.height > maxHeight) {\n        image.width *= maxHeight / image.height\n        image.height = maxHeight\n      }\n\n      context.clearRect(0, 0, canvas.width, canvas.height)\n      canvas.width = image.width\n      canvas.height = image.height\n\n      context.drawImage(image, 0, 0, image.width, image.height)\n\n      resolve(canvas.toDataURL('image/jpeg'))\n    }\n\n    image.src = imageURL\n  })\n\n/**\n * A custom <input> that dynamically reads and resizes image files before\n * submitting them to the server as data URLs. Also, shows a preview of the image.\n */\nclass ImageInput extends React.Component {\n  static propTypes = {\n    className: PropTypes.string,\n    name: PropTypes.string,\n    maxHeight: PropTypes.number\n  }\n\n  state = {\n    value: ''\n  }\n\n  handleFileChange = (event) => {\n    const file = event.target.files[0]\n\n    if (file && file.type.match(/^image\\//)) {\n      readFileAsDataURL(file).then(originalURL => {\n        resizeImage(originalURL, this.canvas, this.props.maxHeight).then(url => {\n          this.setState({ value: url })\n        })\n      })\n    } else {\n      this.setState({ value: '' })\n    }\n  }\n\n  handleFormReset = () => {\n    this.setState({ value: '' })\n  }\n\n  componentDidMount() {\n    this.canvas = document.createElement('canvas')\n    this.fileInput.form.addEventListener('reset', this.handleFormReset)\n  }\n\n  componentWillUnmount() {\n    this.fileInput.form.removeEventListener('reset', this.handleFormReset)\n  }\n\n  render() {\n    const { className, name } = this.props\n    const { value } = this.state\n\n    const style = {\n      position: 'relative'\n    }\n\n    if (value) {\n      style.backgroundImage = `url(\"${value}\")`\n      style.backgroundRepeat = 'no-repeat'\n      style.backgroundPosition = 'center'\n      style.backgroundSize = 'cover'\n    }\n\n    return (\n      <div className={className} style={style}>\n        <input type=\"hidden\" name={name} value={value} />\n        <input\n          ref={node => this.fileInput = node}\n          type=\"file\"\n          onChange={this.handleFileChange}\n          style={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            opacity: 0\n          }}\n        />\n      </div>\n    )\n  }\n}\n\nexport default ImageInput","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport ImageInput from './ImageInput';\nimport serializeForm from 'form-serialize';\n\n\nclass CreateContact extends Component{\n\thandleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tconst values = serializeForm(e.target, { hash: true });\n\n\t\tif (this.props.onCreateContact) {\n\t\t\tthis.props.onCreateContact(values)\n\t\t}\n\t}\n\t\n\trender(){\n\t\t\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<Link\n\t\t\t\t\tclassName='close-create-contact'\n\t\t\t\t\tto='/'>Close\n\t\t\t\t</Link>\n\t\t\t\t<form onSubmit={this.handleSubmit} className='create-contact-form'>\n\t\t\t\t\t<ImageInput\n\t\t\t\t\t\tclassName='create-contact-avatar-input'\n\t\t\t\t\t\tname='avatarURL'\n\t\t\t\t\t\tmaxHeight={64}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className='create-contact-details'>\n\t\t\t\t\t\t<input type='text' name='name' placeholder='Name' />\n\t\t\t\t\t\t<input type='text' name='handle' placeholder='Handle' />\n\t\t\t\t\t\t<button>Add Contact</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default CreateContact;","import React, { Component } from 'react';\nimport ListContacts from './ListContacts';\nimport * as ContactsAPI from './utils/ContactsAPI';\nimport CreateContact from './CreateContact';\nimport { Route } from 'react-router-dom';\n\nclass App extends Component {\n\tstate = {\n\t\tcontacts: [],\n\t};\n\t\n\tcomponentDidMount(){\n\t\tContactsAPI.getAll()\n\t\t.then((contacts) => {\n\t\t\tthis.setState(()=>({\n\t\t\t\tcontacts\n\t\t\t}))\n\t\t})\n\t}\n\t\n\tcreateContact = (contact) => {\n\t\tContactsAPI.create(contact)\n\t\t.then((contact) => {\n\t\t\tthis.setState((currentState) => ({\n\t\t\tcontacts: currentState.contacts.concat([contact])\n\t\t}))\n\t\t})\n\t}\n\t\n\tremoveContact = (c) => {\n\t\tthis.setState((currentState) => (\n\t\t\t{\n\t\t\t\tcontacts: currentState.contacts.filter((contact) => (\n\t\t\t\t\t\tcontact.id !== c.id\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t}\n\t\t));\n\t\t\n\t\tContactsAPI.remove(c);\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Route exact path='/' render={()=> (\n\t\t\t\t\t<ListContacts \n\t\t\t\t\t\tcontacts ={this.state.contacts} \n\t\t\t\t\t\tonDeleteContact={this.removeContact}\n\t\t\t\t\t/>\n\t\t\t\n\t\t\t\t)} />\n\t\t\t\t\n\t\t\t\t<Route path='/create' render={({ history }) => (\n\t\t\t\t\t<CreateContact\n\t\t\t\t\t\tonCreateContact={(contact) => {\n\t\t\t\t\t\t\tthis.createContact(contact)\n\t\t\t\t\t\t\thistory.push('/')\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t)} />\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n\t<BrowserRouter>\n\t\t<App />\n\t</BrowserRouter>, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}